version: "3"

services:
    postgres:
        image: stu-mgmt/postgres
        build:
            context: ./postgres
        environment:
            - POSTGRES_PASSWORD
            - SPARKY_DB_PW
            - BACKEND_DB_PW

    sparky-service:
        image: stu-mgmt/sparky-service
        build:
            context: ./sparky-service
            args:
                - SPARKY_JAR
        environment:
            - SPARKY_DB_PW
            - SPARKY_ADMIN_USER
            - SPARKY_ADMIN_PW
            - SPARKY_JWT_SECRET
            - SPARKY_LDAP
            - SPARKY_LDAP_DOMAIN
            - SPARKY_LDAP_URLS
            - SPARKY_LDAP_AD
        ports:
            - "${SPARKY_PORT:-8080}:8080"
        depends_on:
            - postgres

    stu-mgmt-backend:
        image: ghcr.io/e-learning-by-sse/qualityplus-student-management-service:latest
        environment:
            - DB_USER=studentmgmt_db_user
            - DB_PASSWORD=${POSTGRES_PASSWORD}
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_DATABASE=studentmgmt_db
            - DB_TYPE=postgres
            - TYPEORM_SYNC=true
            - AUTHENTICATION_BASE_PATH=http://sparky-service:8080
            - SERVER_PORT=3000
            - NOTIFICATIONS_ENABLED=true
            - LOG_CONFIG=true
        # comment this if the backend should not be reachable from outside the docker network
        ports:
            - "${BACKEND_PORT:-3000}:3000"
        depends_on:
            - postgres
            - sparky-service

    stu-mgmt-frontend:
        image: stu-mgmt/stu-mgmt-frontend
        build:
            context: ./stu-mgmt-frontend
            args:
                - CLIENT_ARCHIVE
        environment:
            - FRONTEND_API_BASE_URL
            - FRONTEND_WEBMASTER
        ports:
            - "${FRONTEND_PORT:-8000}:80"
        profiles: [frontend]

    exercise-submitter-server:
        image : stu-mgmt/exercise-submitter-server
        build:
            context: ./exercise-submitter-server
            args:
                - EXERCISE_SUBMISSION_SERVER_JAR
        environment:
            - SUBMISSION_SERVER_MGMT_USER
            - SUBMISSION_SERVER_MGMT_PW
        ports:
            - "${SUBMISSION_SERVER_PORT:-8001}:8080"
        depends_on:
            - sparky-service
            - stu-mgmt-backend

    # Components of the WebIDE
    code-exec:
        image: stu-mgmt/code-exec
        build:
            context: ./code-exec/
            args:
                - PISTON_GIT
                - PISTON_JAVA_DOWNLOAD_DURATION
        restart: always
        ports:
            - "${PISTON_PORT:-2000}:2000"
        # volumes:
            # - ./data/piston:/piston
        tmpfs:
            - /piston/jobs:exec
            - /tmp:exec
        profiles: [frontend]

    web-ide:
        image: stu-mgmt/web-ide
        build:
            context: ./web-ide
            args:
                - WEB_IDE_ARCHIVE
                - PISTON_GIT
        environment:
            - FRONTEND_API_BASE_URL
            - WEB_IDE_CODE_EXECUTION_PATH
            - SUBMISSION_SERVER_PATH
        ports:
            - "${WEB_IDE_PORT:-8002}:80"
        volumes:
            - ./data/piston:/piston
        depends_on:
            - stu-mgmt-backend
            - code-exec
        profiles: [frontend]

    # Convergence (pair-programming) requires a bunch of services
    # for this reason, convergence is currently not included in
    # this demo Docker set-up

    # Showcase
    showcase:
        image: stu-mgmt/showcase
        build:
            context: ./showcase
            args:
                - USER_SPARKY_JAR
        environment:
            - SPARKY_SWAGGER_URL
            - FRONTEND_API_BASE_URL
            - FRONTEND_URL
            - BACKEND_SWAGGER_URL
            - WEB_IDE_URL
            - SUBMISSION_SERVER_PATH
        ports:
            - "${SHOWCASE_PORT:-80}:80"
        profiles: [frontend]
