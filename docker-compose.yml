version: "3"

services:
    postgres:
        image: stu-mgmt/postgres
        build:
            context: ./postgres
        environment:
            - POSTGRES_PASSWORD
            - SPARKY_DB_PW
            - BACKEND_DB_PW

    sparky-service:
        image: stu-mgmt/sparky-service
        build:
            context: ./sparky-service
            args:
                - SPARKY_VERSION
        environment:
            - SPARKY_DB_PW
            - SPARKY_ADMIN_USER
            - SPARKY_ADMIN_PW
            - SPARKY_JWT_SECRET
            - SPARKY_LDAP
            - SPARKY_LDAP_DOMAIN
            - SPARKY_LDAP_URLS
            - SPARKY_LDAP_AD
        ports:
            - "${SPARKY_PORT:-8080}:8080"
        depends_on:
            - postgres

    stu-mgmt-backend:
        image: stu-mgmt/stu-mgmt-backend
        build:
            context: ./stu-mgmt-backend
        environment:
            - DB_PASSWORD=$BACKEND_DB_PW
            - SMTP_ENABLED=$BACKEND_MAIL_ENABLED
            - SMTP_HOST=$BACKEND_MAIL_SERVER
            - SMTP_PORT=$BACKEND_MAIL_PORT
            - SMTP_USERNAME=$BACKEND_MAIL_USERNAME
            - SMTP_PASSWORD=$BACKEND_MAIL_PASSWORD
        # comment this if the backend should not be reachable from outside the docker network
        ports:
            - "${BACKEND_PORT:-3000}:3000"
        depends_on:
            - postgres
            - sparky-service

    stu-mgmt-frontend:
        image: stu-mgmt/stu-mgmt-frontend
        build:
            context: ./stu-mgmt-frontend
            args:
                - FRONTEND_WEBMASTER
        environment:
            - FRONTEND_API_BASE_URL
        ports:
            - "${FRONTEND_PORT:-8000}:80"

    svn:
        image: stu-mgmt/svn
        build:
            context: ./svn
        environment:
            - SPARKY_DB_PW
            - SVN_REPO_NAME=submission
        ports:
            - "${SVN_PORT:-8888}:80"
        depends_on:
            - sparky-service
        profiles: ["svn"]
