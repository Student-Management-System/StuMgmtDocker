version: "3"

services:
    postgres:
        image: postgres
        environment:
            - POSTGRES_PASSWORD
            - SPARKY_DB_PW
            - BACKEND_DB_PW
        volumes:
            - ./init-sparky.sh:/docker-entrypoint-initdb.d/1-init-sparky.sh
            - ./init-stu-mgmt-backend.sh:/docker-entrypoint-initdb.d/2-init-stu-mgmt-backend.sh

    sparky-service:
        image: stu-mgmt/sparky-service
        build:
            context: ./sparky-service
            args:
                - SPARKY_VERSION
                - SPARKY_DB_PW
                - SPARKY_ADMIN_USER
                - SPARKY_ADMIN_PW
                - SPARKY_JWT_SECRET
                - SPARKY_LDAP
                - SPARKY_LDAP_DOMAIN
                - SPARKY_LDAP_URLS
                - SPARKY_LDAP_AD
        ports:
            - 8080:8080
        depends_on:
            - postgres

    stu-mgmt-backend:
        image: stu-mgmt/stu-mgmt-backend
        build:
            context: ./stu-mgmt-backend
            args:
                - BACKEND_DB_PW
                - BACKEND_MAIL_ENABLED
                - BACKEND_MAIL_SERVER
                - BACKEND_MAIL_USERNAME
                - BACKEND_MAIL_PASSWORD
                - BACKEND_MAIL_PORT
        # uncomment this if the backend should be reachable from outside the docker network
        #ports:
            #- 3000:3000
        depends_on:
            - postgres
            - sparky-service

    stu-mgmt-frontend:
        image: stu-mgmt/stu-mgmt-frontend
        build:
            context: ./stu-mgmt-frontend
            args:
                - FRONTEND_SPARKY_HOST
                - FRONTEND_WEBMASTER
        ports:
            - 8000:80
